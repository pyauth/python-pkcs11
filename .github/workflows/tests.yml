name: Tests
on:
  push:
    branches: ["**"]
  pull_request: {}
  workflow_dispatch: {}
env:
  UV_PYTHON_PREFERENCE: only-system
  UV_NO_SYNC: "1"
  PKCS11_TOKEN_LABEL: "TEST"
  PKCS11_TOKEN_PIN: "1234"
  PKCS11_TOKEN_SO_PIN: "5678"
jobs:
  tests:
    runs-on: ${{ matrix.os }}
    strategy:
      # Our test suite is pretty fast, so fail-fast: false allows for better troubleshooting.
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
          - windows-latest
          - macos-14
        python-version:
          - "3.9"
          - "3.10"
          - "3.11"
          - "3.12"
          - "3.13"
          - "3.14"
        pkcs11-platform:
          - softhsm
          - opencryptoki
        exclude:
          # only run opencryptoki tests on ubuntu
          # (macos and windows don't seem to be supported)
          - pkcs11-platform: opencryptoki
            os: windows-latest
          - pkcs11-platform: opencryptoki
            os: macos-14
    steps:
      - name: Acquire sources
        uses: actions/checkout@v4
      - uses: ./.github/actions/test-setup
        id: setup
        with:
          os: ${{ matrix.os }}
          token-label: ${{ env.PKCS11_TOKEN_LABEL }}
          token-so-pin: ${{ env.PKCS11_TOKEN_SO_PIN }}
          token-user-pin: ${{ env.PKCS11_TOKEN_PIN }}
          python-version: ${{ matrix.python-version }}
          pkcs11-platform: ${{ matrix.pkcs11-platform }}
          dependency-group: testing
      - name: Run tests
        run: uv run pytest -v
        env:
          PKCS11_MODULE: ${{ steps.setup.outputs.module }}
  multilib-tests:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version:
          - "3.9"
          - "3.10"
          - "3.11"
          - "3.12"
          - "3.13"
          - "3.14"
    steps:
      - name: Acquire sources
        uses: actions/checkout@v4
      - uses: ./.github/actions/test-setup
        id: setup
        with:
          os: ubuntu-latest
          pkcs11-platform: multi
          token-label: ${{ env.PKCS11_TOKEN_LABEL }}
          token-so-pin: ${{ env.PKCS11_TOKEN_SO_PIN }}
          token-user-pin: ${{ env.PKCS11_TOKEN_PIN }}
          python-version: ${{ matrix.python-version }}
          dependency-group: testing
      - name: Run tests
        run: uv run pytest -v tests/test_multilib.py
        env:
          PKCS11_MODULE: ${{ steps.setup.outputs.module }}
          PKCS11_MODULE2: ${{ steps.setup.outputs.module2 }}
